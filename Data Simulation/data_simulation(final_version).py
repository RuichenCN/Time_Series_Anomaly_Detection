# -*- coding: utf-8 -*-
"""Data Simulation(final version).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T_XsFAm2yj760s_rDnULIWMUtVFriCEN
"""

# Import common libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Set random seed for reproducibility
np.random.seed(42)

# Generate time series data for two weeks
total_hours = 2016  # 2 weeks * 7 days * 24 hours
time = np.arange(0, total_hours, 0.1)

# Initialize an empty array for periodic data
periodic_data = np.zeros_like(time)

# Function to generate data based on time intervals
def generate_data(time, start_time, interval_1, interval_2):
    condition1 = (time >= start_time) & (time < start_time + interval_1)
    condition2 = (time >= start_time + interval_1) & (time < start_time + interval_1 + interval_2)
    periodic_data[condition1] = 10 * np.sin(2 * np.pi * (time[condition1] - start_time) / 144 + np.pi * 1.5) + np.random.normal(0, 0.5, len(time[condition1])) + 11
    periodic_data[condition2] = 2 * np.sin(2 * np.pi * (time[condition2] - start_time) / 144 + np.pi * 1.5) + np.random.normal(0, 0.5, len(time[condition2])) + 2.2

# Generate data for each week
for week in range(2):
    start_time = week * 1008
    generate_data(time, start_time, 720, 288)

# Insert anomalies
num_anomalies = 20
anomalies_indices = np.random.choice(len(time), num_anomalies, replace=False)
anomalies_deviation = np.random.uniform(low=3, high=5, size=num_anomalies)

# Insert anomalies into the time series
periodic_data_with_anomalies = periodic_data.copy()
periodic_data_with_anomalies[anomalies_indices] += anomalies_deviation

# Create a DataFrame to hold the time series data
df = pd.DataFrame({'time': time, 'value': periodic_data_with_anomalies})

# # Display the DataFrame
# display(df)

# Data visualization
plt.figure(figsize=(20, 5))
plt.plot(df['time'], df['value'], label='Network Traffic')
plt.scatter(df['time'].iloc[anomalies_indices], periodic_data_with_anomalies[anomalies_indices], color='red', label='Anomalies')
plt.legend()
plt.xlabel('Time')
plt.ylabel('Volume')
plt.title('Network Traffic with Anomalies in Two Weeks')

# Set x-axis ticks and labels to Monday to Sunday for each week
plt.xticks(ticks=np.linspace(0, 2016, 15), labels=['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun', 'Mon'])

plt.show()

# Save data
df.to_csv('time_series_with_anomalies.csv', index=False)